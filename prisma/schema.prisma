// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  binaryTargets = ["native", "windows", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role
  agencyId  String?    // Nullable for super admin
  agency    Agency?    @relation(fields: [agencyId], references: [id])
  createdAt DateTime @default(now())

  complaintsSubmitted Complaint[] @relation("CitizenComplaints")
  responses           Response[]
  assignments         Assignment[]
}

model Agency {
  id        String   @id @default(uuid())
  name      String
  description String?
  categories Category[]
  users     User[] // Admins & Staff
  complaints Complaint[]
}

model Category {
  id        String   @id @default(uuid())
  name      String
  agencyId  String
  agency    Agency   @relation(fields: [agencyId], references: [id])
  complaints Complaint[]
}

model Complaint {
  id          String   @id @default(uuid())
  subject     String
  description String
  citizenEmail String
  citizenName  String
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  agencyId    String
  agency      Agency   @relation(fields: [agencyId], references: [id])
  status      ComplaintStatus @default(SUBMITTED)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  assignedTo  Assignment?
  responses   Response[]

  citizen     User?    @relation("CitizenComplaints", fields: [citizenId], references: [id])
  citizenId   String?
}

model Assignment {
  id          String   @id @default(uuid())
  complaintId String   @unique
  staffId     String
  assignedAt  DateTime @default(now())

  complaint   Complaint @relation(fields: [complaintId], references: [id])
  staff       User      @relation(fields: [staffId], references: [id])
}

model Response {
  id          String   @id @default(uuid())
  message     String
  complaintId String
  userId      String
  createdAt   DateTime @default(now())

  complaint   Complaint @relation(fields: [complaintId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

enum Role {
  SUPER_ADMIN
  AGENCY_ADMIN
  STAFF
}

enum ComplaintStatus {
  SUBMITTED
  ASSIGNED
  IN_PROGRESS
  RESOLVED
}